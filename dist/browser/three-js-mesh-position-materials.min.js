!(function(e, i) {
"object" == typeof exports && "undefined" != typeof module
? (module.exports = i(require("three-js-rgba-packing"), require("three-full")))
: "function" == typeof define && define.amd
? define(["three-js-rgba-packing", "three-full"], i)
: (e.THREEMeshPositionMaterial = i(e.THREERGBAPacking, e.THREE));
})(this, function(e, i) {
"use strict";
function t(e) {
((e = e || {}).uniforms = i.UniformsUtils.merge([i.ShaderLib.displacementmap])),
(e.vertexShader = [
"#include <common>",
"#include <displacementmap_pars_vertex>",
"#include <fog_pars_vertex>",
"#include <morphtarget_pars_vertex>",
"#include <skinning_pars_vertex>",
"#include <shadowmap_pars_vertex>",
"#include <logdepthbuf_pars_vertex>",
"#include <clipping_planes_pars_vertex>",
"varying vec3 vWorldPosition;",
"void main() {",
"#include <skinbase_vertex>",
"#include <begin_vertex>",
"#include <morphtarget_vertex>",
"#include <skinning_vertex>",
"#include <displacementmap_vertex>",
"#include <project_vertex>",
"#include <logdepthbuf_vertex>",
"#include <clipping_planes_vertex>",
"vec4 vWorldPosition = modelMatrix * vec4( transformed, 1.0 );",
"}"
].join("\n")),
(e.fragmentShader = [
"varying vec3 vWorldPosition;",
"void main() {",
"gl_FragColor = vWorldPosition;",
"}"
].join("\n")),
(this.displacementMap = null),
(this.displacementScale = 1),
(this.displacementBias = 0),
(this.wireframe = !1),
(this.wireframeLinewidth = 1),
(this.fog = !1),
(this.lights = !1),
(this.skinning = !1),
(this.morphTargets = !1),
i.ShaderMaterial.call(this, e);
}
(e = e && e.hasOwnProperty("default") ? e.default : e),
(i = i && i.hasOwnProperty("default") ? i.default : i),
(t.prototype = Object.create(i.ShaderMaterial.prototype)),
(t.prototype.constructor = t),
(i.MeshWorldPositionMaterial = t);
var r = t;
function n(t) {
((t = t || {}).uniforms = i.UniformsUtils.merge([i.ShaderLib.displacementmap])),
(t.vertexShader = [
"#include <common>",
"#include <displacementmap_pars_vertex>",
"#include <fog_pars_vertex>",
"#include <morphtarget_pars_vertex>",
"#include <skinning_pars_vertex>",
"#include <shadowmap_pars_vertex>",
"#include <logdepthbuf_pars_vertex>",
"#include <clipping_planes_pars_vertex>",
"varying vec3 vViewPosition;",
"void main() {",
"#include <skinbase_vertex>",
"#include <begin_vertex>",
"#include <morphtarget_vertex>",
"#include <skinning_vertex>",
"#include <displacementmap_vertex>",
"#include <project_vertex>",
"#include <logdepthbuf_vertex>",
"#include <clipping_planes_vertex>",
"vViewPosition = gl_Position",
"}"
].join("\n")),
(t.fragmentShader = [
"varying vec3 vViewPosition;",
t.useFloatTexture ? "" : e.glslEncodeUnitFloat32,
"void main() {",
t.useFloatTexture
? "gl_FragColor = vViewPosition;"
: "gl_FragColor = encodeUnitFloat32((vViewPosition." +
  t.coordinate +
  " + 1.0) / 4.0);",
"}"
].join("\n")),
(this.displacementMap = null),
(this.displacementScale = 1),
(this.displacementBias = 0),
(this.wireframe = !1),
(this.wireframeLinewidth = 1),
(this.fog = !1),
(this.lights = !1),
(this.skinning = !1),
(this.morphTargets = !1),
i.ShaderMaterial.call(this, t);
}
(n.prototype = Object.create(i.ShaderMaterial.prototype)),
(n.prototype.constructor = n),
(i.MeshViewPositionMaterial = n);
var a = n;
function o(e) {
((e = e || {}).depthPacking = i.RGBADepthPacking),
i.MeshDepthMaterial.call(this, e);
}
(o.prototype = Object.create(i.MeshDepthMaterial.prototype)),
(o.prototype.constructor = o),
(i.MeshRGBADepthMaterial = o);
var s = o;
return (
(i.MeshPositionMaterials = {
MeshWorldPositionMaterial: r,
MeshViewPositionMaterial: a,
MeshRGBADepthMaterial: s
}),
a
);
});
