!(function(e, i) {
"object" == typeof exports && "undefined" != typeof module
? (module.exports = i(require("three-full")))
: "function" == typeof define && define.amd
? define(["three-full"], i)
: (e.THREEMeshPositionMaterials = i(e.THREE));
})(this, function(e) {
"use strict";
function i(i) {
((i = i || {}).uniforms = e.UniformsUtils.merge([e.ShaderLib.depth.uniforms])),
(i.vertexShader = [
"#include <common>",
"#include <displacementmap_pars_vertex>",
"#include <fog_pars_vertex>",
"#include <morphtarget_pars_vertex>",
"#include <skinning_pars_vertex>",
"#include <shadowmap_pars_vertex>",
"#include <logdepthbuf_pars_vertex>",
"#include <clipping_planes_pars_vertex>",
"varying vec4 vWorldPosition;",
"void main() {",
"#include <skinbase_vertex>",
"#include <begin_vertex>",
"#include <morphtarget_vertex>",
"#include <skinning_vertex>",
"#include <displacementmap_vertex>",
"#include <project_vertex>",
"#include <logdepthbuf_vertex>",
"#include <clipping_planes_vertex>",
"vWorldPosition = modelMatrix * vec4( transformed, 1.0 );",
"}"
].join("\n")),
(i.fragmentShader = [
"varying vec4 vWorldPosition;",
"void main() {",
"gl_FragColor = vWorldPosition;",
"}"
].join("\n")),
(this.displacementMap = null),
(this.displacementScale = 1),
(this.displacementBias = 0),
(this.wireframe = !1),
(this.wireframeLinewidth = 1),
(this.fog = !1),
(this.lights = !1),
(this.skinning = !1),
(this.morphTargets = !1),
e.ShaderMaterial.call(this, i);
}
(e = e && e.hasOwnProperty("default") ? e.default : e),
(i.prototype = Object.create(e.ShaderMaterial.prototype)),
(i.prototype.constructor = i),
(e.MeshWorldPositionMaterial = i);
var t = i;
function r(i) {
((i = i || {}).uniforms = e.UniformsUtils.merge([e.ShaderLib.depth.uniforms])),
(i.vertexShader = [
"#include <common>",
"#include <displacementmap_pars_vertex>",
"#include <fog_pars_vertex>",
"#include <morphtarget_pars_vertex>",
"#include <skinning_pars_vertex>",
"#include <shadowmap_pars_vertex>",
"#include <logdepthbuf_pars_vertex>",
"#include <clipping_planes_pars_vertex>",
"varying vec3 vViewPosition;",
"void main() {",
"#include <skinbase_vertex>",
"#include <begin_vertex>",
"#include <morphtarget_vertex>",
"#include <skinning_vertex>",
"#include <displacementmap_vertex>",
"#include <project_vertex>",
"#include <logdepthbuf_vertex>",
"#include <clipping_planes_vertex>",
"vViewPosition = gl_Position",
"}"
].join("\n")),
(i.fragmentShader = [
"#include <packing>",
"#define packUnitFloat32ToRGBA packDepthToRGBA",
"varying vec3 vViewPosition;",
"void main() {",
i.useFloatTexture
? "gl_FragColor = vViewPosition;"
: "gl_FragColor = packUnitFloat32ToRGBA((vViewPosition." +
  i.coordinate +
  " + 1.0) / 4.0);",
"}"
].join("\n")),
(this.displacementMap = null),
(this.displacementScale = 1),
(this.displacementBias = 0),
(this.wireframe = !1),
(this.wireframeLinewidth = 1),
(this.fog = !1),
(this.lights = !1),
(this.skinning = !1),
(this.morphTargets = !1),
e.ShaderMaterial.call(this, i);
}
(r.prototype = Object.create(e.ShaderMaterial.prototype)),
(r.prototype.constructor = r),
(e.MeshViewPositionMaterial = r);
var n = r;
function a(i) {
((i = i || {}).depthPacking = e.RGBADepthPacking),
e.MeshDepthMaterial.call(this, i);
}
(a.prototype = Object.create(e.MeshDepthMaterial.prototype)),
(a.prototype.constructor = a),
(e.MeshRGBADepthMaterial = a);
var o = a;
return (
(e.MeshPositionMaterials = {
MeshWorldPositionMaterial: t,
MeshViewPositionMaterial: n,
MeshRGBADepthMaterial: o
}),
e.MeshPositionMaterials
);
});
